// // Mocks generated by Mockito 5.4.4 from annotations
// // in g_commerce/test/shared_prefrence_test.dart.
// // Do not manually edit this file.

// // ignore_for_file: no_leading_underscores_for_library_prefixes
// import 'package:g_commerce/core/helper/shared_prefrence.dart' as _i2;
// import 'package:mockito/mockito.dart' as _i1;

// // ignore_for_file: type=lint
// // ignore_for_file: avoid_redundant_argument_values
// // ignore_for_file: avoid_setters_without_getters
// // ignore_for_file: comment_references
// // ignore_for_file: deprecated_member_use
// // ignore_for_file: deprecated_member_use_from_same_package
// // ignore_for_file: implementation_imports
// // ignore_for_file: invalid_use_of_visible_for_testing_member
// // ignore_for_file: prefer_const_constructors
// // ignore_for_file: unnecessary_parenthesis
// // ignore_for_file: camel_case_types
// // ignore_for_file: subtype_of_sealed_class

// /// A class which mocks [SharedPrefImpl].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockSharedPrefImpl extends _i1.Mock implements _i2.SharedPrefImpl {
//   MockSharedPrefImpl() {
//     _i1.throwOnMissingStub(this);
//   }

//   @override
//   void clearData() => super.noSuchMethod(
//         Invocation.method(
//           #clearData,
//           [],
//         ),
//         returnValueForMissingStub: null,
//       );

//   @override
//   void getString(String? key) => super.noSuchMethod(
//         Invocation.method(
//           #getData,
//           [key],
//         ),
//         returnValueForMissingStub: null,
//       );

//   @override
//   void removeData(String? key) => super.noSuchMethod(
//         Invocation.method(
//           #removeData,
//           [key],
//         ),
//         returnValueForMissingStub: null,
//       );

//   @override
//   void setString(
//     String? key,
//     dynamic value,
//   ) =>
//       super.noSuchMethod(
//         Invocation.method(
//           #setString,
//           [
//             key,
//             value,
//           ],
//         ),
//         returnValueForMissingStub: null,
//       );
// }
